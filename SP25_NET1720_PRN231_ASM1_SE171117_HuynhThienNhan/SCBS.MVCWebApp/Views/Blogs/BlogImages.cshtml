@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Blog Images";
}

<h1>Blog Images - jQuery.Ajax call RestFullAPI</h1>

<div class="row mb-3">
    <div class="col">
        <button type="button" class="btn btn-primary" onclick="add();">
            <i class="bi bi-plus-circle"></i> Add New Blog Image
        </button>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5 class="card-title">Blog Image Management</h5>
    </div>
    <div class="card-body">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Blog ID</th>
                    <th>Image URL</th>
                    <th>Caption</th>
                    <th>Alt Text</th>
                    <th>Is Primary</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody class="tblBody">
            </tbody>
        </table>
    </div>
</div>

<div class="modal" id="blogImageModal" tabindex="-1" aria-labelledby="blogImageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frmBlogImage", id = "frmBlogImage" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="blogImageModalLabel">Blog Image</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- ID field container -->
                    <div class="form-group row mb-3" id="idContainer" style="display:none;">
                        <div class="col-md-4">
                            <label for="id" class="form-label">Blog Image ID (GUID)</label>
                            <input type="text" id="id" name="id" class="form-control" />
                            <small class="form-text text-muted">Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</small>
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        <div class="col-md-4">
                            <label for="blogId" class="form-label">Blog ID</label>
                            <input type="text" id="blogId" name="blogId" class="form-control" />
                            <small class="form-text text-muted">Enter a valid Blog GUID</small>
                        </div>
                        <div class="col-md-4">
                            <label for="imageUrl" class="form-label">Image URL</label>
                            <input type="text" id="imageUrl" name="imageUrl" class="form-control" required />
                        </div>
                        <div class="col-md-4">
                            <label for="caption" class="form-label">Caption</label>
                            <input type="text" id="caption" name="caption" class="form-control" />
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <div class="col-md-4">
                            <label for="altText" class="form-label">Alt Text</label>
                            <input type="text" id="altText" name="altText" class="form-control" />
                        </div>
                        <div class="col-md-4">
                            <label for="isPrimary" class="form-label">Is Primary</label>
                            <select id="isPrimary" name="isPrimary" class="form-select">
                                <option value="true">Yes</option>
                                <option value="false" selected>No</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="imageSize" class="form-label">Image Size (bytes)</label>
                            <input type="number" id="imageSize" name="imageSize" class="form-control" min="0" />
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <div class="col-md-4">
                            <label for="uploadedByName" class="form-label">Uploaded By</label>
                            <input type="text" id="uploadedByName" name="uploadedByName" class="form-control" />
                        </div>
                        <div class="col-md-4">
                            <label for="createdAt" class="form-label">Created At</label>
                            <input type="datetime-local" id="createdAt" name="createdAt" class="form-control" />
                        </div>
                        <div class="col-md-4">
                            <label for="updatedAt" class="form-label">Updated At</label>
                            <input type="datetime-local" id="updatedAt" name="updatedAt" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btSave" type="button" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        let isAddMode = true;

        $(document).ready(function () {
            loadData();
        });

        function loadData() {
            $.ajax({
                url: 'https://localhost:7258/api/BlogImage', // Đổi URL sang API BlogImages
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log(result);
                    var html = '';
                    $.each(result, function (key, item) {
                        html += '<tr>';
                        html += '<td>' + item.blogId + '</td>';
                        html += '<td>' + item.imageUrl + '</td>';
                        html += '<td>' + item.caption + '</td>';
                        html += '<td>' + item.altText + '</td>';
                        html += '<td>' + (item.isPrimary ? 'Yes' : 'No') + '</td>';
                        html += '<td>' +
                            '<button class="btn btn-primary btn-sm me-1" onclick="edit(\'' + item.id + '\')"><i class="bi bi-pencil"></i> Edit</button>' +
                            '<button class="btn btn-danger btn-sm" onclick="deleteBlogImage(\'' + item.id + '\')"><i class="bi bi-trash"></i> Delete</button>' +
                            '</td>';
                        html += '</tr>';
                    });

                    $('.tblBody').html(html);
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        }

        function add() {
            isAddMode = true;
            $("#blogImageModalLabel").html("Add New Blog Image");
            $('#frmBlogImage')[0].reset();
            $("#idContainer").show();
            $("#id").val(generateGuid());
            const now = new Date();
            $("#createdAt").val(formatDateForInput(now));
            $("#updatedAt").val(formatDateForInput(now));
            $('#blogImageModal').modal('show');
        }

        function edit(id) {
            isAddMode = false;
            $("#blogImageModalLabel").html("Edit Blog Image");
            $('#frmBlogImage')[0].reset();
            $("#idContainer").hide();

            $.ajax({
                url: 'https://localhost:7258/api/BlogImage/' + id, // Đổi URL sang API BlogImages
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (blogImage) {
                    $("#id").val(blogImage.id);
                    $("#blogId").val(blogImage.blogId);
                    $("#imageUrl").val(blogImage.imageUrl);
                    $("#caption").val(blogImage.caption);
                    $("#altText").val(blogImage.altText);
                    $("#isPrimary").val(blogImage.isPrimary.toString());
                    $("#imageSize").val(blogImage.imageSize);
                    $("#uploadedByName").val(blogImage.uploadedByName);
                    if (blogImage.createdAt) {
                        $("#createdAt").val(formatDateForInput(blogImage.createdAt));
                    }
                    if (blogImage.updatedAt) {
                        $("#updatedAt").val(formatDateForInput(blogImage.updatedAt));
                    }
                    $('#blogImageModal').modal('show');
                },
                error: function (xhr, error) {
                    alert("Error retrieving blog image: " + xhr.statusText);
                }
            });
        }

        function deleteBlogImage(id) {
            if (confirm("Are you sure you want to delete this blog image?")) {
                $.ajax({
                    url: 'https://localhost:7258/api/BlogImage/' + id, // Đổi URL sang API BlogImages
                    type: "DELETE",
                    contentType: "application/json;charset=utf-8",
                    success: function (result) {
                        loadData();
                        alert("Blog image deleted successfully!");
                    },
                    error: function (xhr, error) {
                        alert("Error: " + xhr.responseText);
                        console.log(xhr);
                    }
                });
            }
        }

        function generateGuid() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                var r = Math.random() * 16 | 0,
                    v = c === 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }

        function formatDateForInput(dateString) {
            const date = new Date(dateString);
            return date.toISOString().slice(0, 16);
        }

        function isValidGuid(guid) {
            const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
            return guidRegex.test(guid);
        }

        $("#btSave").click(function () {
            if (!$("#blogId").val() || !$("#imageUrl").val()) {
                alert("Please fill in all required fields (Blog ID and Image URL).");
                return;
            }

            if (isAddMode) {
                const idValue = $("#id").val();
                if (!isValidGuid(idValue)) {
                    alert("Please enter a valid GUID ID in the format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx");
                    return;
                }
            }

            const method = isAddMode ? 'POST' : 'PUT';
                const url = 'https://localhost:7258/api/BlogImage'; // Đổi URL sang API BlogImages

            $.ajax({
                type: method,
                url: url,
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json; charset=utf-8'
                },
                data: JSON.stringify({
                    id: $("#id").val(),
                    blogId: $("#blogId").val(),
                    imageUrl: $("#imageUrl").val(),
                    caption: $("#caption").val() || null,
                    altText: $("#altText").val() || null,
                    isPrimary: $("#isPrimary").val() === "true",
                    imageSize: $("#imageSize").val() ? parseInt($("#imageSize").val()) : null,
                    uploadedByName: $("#uploadedByName").val() || null,
                    createdAt: $("#createdAt").val() || formatDateForInput(new Date()),
                    updatedAt: $("#updatedAt").val() || formatDateForInput(new Date())
                }),
                success: function (result) {
                    $('#blogImageModal').modal('hide');
                    loadData();
                    alert(method === 'POST' ? "Blog image created successfully!" : "Blog image updated successfully!");
                },
                error: function (xhr, error) {
                    console.log("Error details:", xhr);
                    let errorMsg = "An error occurred";
                    try {
                        const errorResponse = JSON.parse(xhr.responseText);
                        if (errorResponse.title) errorMsg = errorResponse.title;
                        if (errorResponse.errors) {
                            errorMsg += ":\n";
                            Object.keys(errorResponse.errors).forEach(key => {
                                errorMsg += `- ${key}: ${errorResponse.errors[key].join(', ')}\n`;
                            });
                        }
                    } catch (e) {
                        errorMsg = xhr.responseText || xhr.statusText;
                    }
                    alert("Error: " + errorMsg);
                }
            });
        });
    </script>
}